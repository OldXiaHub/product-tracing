<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.taru.producttracing.dao.UserDaoByZhangR">

    <!--前台用户登录2019/8/20-11：54-->
    <select id="login" parameterType="HashMap" resultMap="UserMap">
        SELECT
            *
        FROM
        USER
        WHERE
            user_name = #{nickName}
	    AND user_password = #{password}
    </select>
    <resultMap id="UserMap" type="org.taru.producttracing.pojo.User">
        <id property="openId"           column="USER_ID" jdbcType="VARCHAR"></id>
        <result property="nickName"     column="USER_NAME" jdbcType="VARCHAR"></result>
        <result property="userPassword" column="USER_PASSWORD" jdbcType="VARCHAR"></result>
        <result property="userTelphone" column="USER_TELPHONE" jdbcType="VARCHAR"></result>
        <result property="userAddress"  column="USER_ADDRESS" jdbcType="VARCHAR"></result>
        <result property="userComment"  column="USER_COMMENT" jdbcType="VARCHAR"></result>
        <result property="userStatus"   column="USER_STATUS" jdbcType="TINYINT"></result>
    </resultMap>

    <!--/**
     * 添加用户个人信息
     * author:zhangrui
     * time:2019/8/21-15:37
     */-->
    <update id="addUserInfo" parameterType="org.taru.producttracing.pojo.User">
        INSERT INTO USER ( user_id, user_name, user_telphone, user_address, user_comment, user_status, user_url )
        VALUES
            ( #{openId}, #{nickName}, #{userTelphone}, #{userAddress}, #{userComment}, #{userStatus}, #{avatarUrl} );
    </update>

    <!--/**
     * 注册用户
     * author:zhangrui
     * time:2019/8/22-22:10
     */-->
    <insert id="userRegister" parameterType="String">
        INSERT INTO USER ( user_id, user_name, user_address, user_status, user_url )
        VALUES
            ( #{openId}, #{nickName}, #{userAddress}, 1,#{avatarUrl});
    </insert>
    <!--/**
     * 用户个人信息获取
     *author:zhangrui
     * time：2019/08/21-21:20
     */-->
    <select id="getUserInfo" parameterType="String" resultMap="UserMap1">
        SELECT
            *
        FROM
        USER
        WHERE
            user_id = #{openId}
    </select>
    <resultMap id="UserMap1" type="org.taru.producttracing.pojo.User">
        <id     property="openId"       column="user_id" jdbcType="VARCHAR"></id>
        <result property="nickName"     column="user_name" jdbcType="VARCHAR"></result>
        <result property="userTelphone" column="user_telphone" jdbcType="VARCHAR"></result>
        <result property="userAddress"  column="user_address" jdbcType="VARCHAR"></result>
        <result property="userComment"  column="user_comment" jdbcType="VARCHAR"></result>
        <result property="userStatus"   column="user_status" jdbcType="TINYINT"></result>
        <result property="avatarUrl"    column="user_url" jdbcType="VARCHAR"></result>
    </resultMap>

    <!--/**
     * 查询自己的投诉记录
     * author:zhangrui
     * time：2019/08/22-9:20
     */-->
    <select id="userComplain" parameterType="String" resultMap="UserMap2">
        SELECT
            b.*,
            a.user_id
        FROM
            complain b
            LEFT JOIN `user` a ON complain_user_name = a.user_id
        WHERE
            complain_user_name = #{openId}
    </select>
    <resultMap id="UserMap2" type="org.taru.producttracing.pojo.Complain">
        <id     property="complainId"      column="complain_id"      jdbcType="VARCHAR"></id>
        <result property="complainName"    column="complain_name"    jdbcType="VARCHAR"></result>
        <result property="complainContent" column="complain_photo"   jdbcType="VARCHAR"></result>
        <result property="complainUserId"  column="complain_user_name" jdbcType="VARCHAR"></result>
        <result property="complainStatus"  column="complain_status"  jdbcType="TINYINT"></result>
    </resultMap>

    <!--/**
     * 用户主动投诉
     * author:zhangrui
     * time:2019/8/22-21:10
     */-->
    <insert id="complain" parameterType="String">
        INSERT INTO
        complain ( complain_id, complain_name, complain_content, complain_user_name, complain_status,complain_time )
        VALUES
            (#{complainId}, #{complainName}, #{complainContent}, #{complainUserId}, 0 ,#{complainTime})
    </insert>
</mapper>